using System.ComponentModel;
using Microsoft.SemanticKernel;

namespace DslCopilot.Core.Plugins
{
    public class CodeValidationRetrievalPlugin(CodeValidationRetrievalPluginOptions options)
    {
        public static readonly Dictionary<string, Func<string, AntlrConfigOptions>> DefaultParsers = [];
        [KernelFunction("code_validator")]
        [Description("Used to validate the code that was generated by the LLM and provides feedback.")]
        [return: Description("The validation feedback.")]
        public string GetCodeValidation(
            [Description("The language of the code.")] string language,
            [Description("The code to validate.")] string code)
        {
            language = language.ToLower();
            if (!options.Parsers.TryGetValue(language, out var value))
            {
                return $"No parser found for language {language}";
            }
            var (parser, rule, listener) = value(code);
            if(listener.Errors.Any())
            {
                var message = "The following errors were found, fix them and correct the program:";
                message += string.Join($"{Environment.NewLine} - ", listener.Errors);
                return message;
            }
            return "No errors found. ::success::";
        }
    }
}
