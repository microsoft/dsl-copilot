//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419
namespace DSL.FineTuning.Pipeline
{
    using System;
    using System.IO;
    using System.Text;
    using Antlr4.Runtime;
    using Antlr4.Runtime.Atn;
    using Antlr4.Runtime.Misc;
    using DFA = Antlr4.Runtime.Dfa.DFA;

    [System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
    [System.CLSCompliant(false)]
    public partial class ClassroomLexer : Lexer
    {
        protected static DFA[] decisionToDFA;
        protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
        public const int
            T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, T__7 = 8, T__8 = 9,
            T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, T__14 = 15, T__15 = 16, T__16 = 17,
            T__17 = 18, T__18 = 19, T__19 = 20, Value = 21, Note = 22, COMMENT = 23, MULTILINE_COMMENT = 24,
            ID = 25, WS = 26;
        public static string[] channelNames = {
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    };

        public static string[] modeNames = {
        "DEFAULT_MODE"
    };

        public static readonly string[] ruleNames = {
        "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
        "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
        "T__17", "T__18", "T__19", "Value", "Note", "COMMENT", "MULTILINE_COMMENT",
        "DIGIT", "ID", "WS"
    };


        public ClassroomLexer(ICharStream input)
        : this(input, Console.Out, Console.Error) { }

        public ClassroomLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
        : base(input, output, errorOutput)
        {
            Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
        }

        private static readonly string[] _LiteralNames = {
        null, "'Classroom'", "'<'", "'>'", "'Action'", "'main'", "'('", "')'",
        "'{'", "'}'", "'Notes'", "'.'", "'take'", "';'", "'='", "'value'", "'note'",
        "'*'", "'/'", "'+'", "'-'"
    };
        private static readonly string[] _SymbolicNames = {
        null, null, null, null, null, null, null, null, null, null, null, null,
        null, null, null, null, null, null, null, null, null, "Value", "Note",
        "COMMENT", "MULTILINE_COMMENT", "ID", "WS"
    };
        public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

        [NotNull]
        public override IVocabulary Vocabulary
        {
            get
            {
                return DefaultVocabulary;
            }
        }

        public override string GrammarFileName { get { return "Classroom.g4"; } }

        public override string[] RuleNames { get { return ruleNames; } }

        public override string[] ChannelNames { get { return channelNames; } }

        public override string[] ModeNames { get { return modeNames; } }

        public override int[] SerializedAtn { get { return _serializedATN; } }

        static ClassroomLexer()
        {
            decisionToDFA = new DFA[_ATN.NumberOfDecisions];
            for (int i = 0; i < _ATN.NumberOfDecisions; i++)
            {
                decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
            }
        }
        private static int[] _serializedATN = {
        4,0,26,183,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
        6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
        7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
        7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,9,
        1,9,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,
        14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,
        18,1,19,1,19,1,20,3,20,127,8,20,1,20,4,20,130,8,20,11,20,12,20,131,1,21,
        1,21,5,21,136,8,21,10,21,12,21,139,9,21,1,21,1,21,1,22,1,22,1,22,1,22,
        5,22,147,8,22,10,22,12,22,150,9,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,
        5,23,159,8,23,10,23,12,23,162,9,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,
        1,24,1,25,4,25,173,8,25,11,25,12,25,174,1,26,4,26,178,8,26,11,26,12,26,
        179,1,26,1,26,1,160,0,27,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
        21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,
        45,23,47,24,49,0,51,25,53,26,1,0,5,1,0,34,34,2,0,10,10,13,13,1,0,48,57,
        2,0,65,90,97,122,3,0,9,10,13,13,32,32,188,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
        1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
        0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
        1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
        0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,51,
        1,0,0,0,0,53,1,0,0,0,1,55,1,0,0,0,3,65,1,0,0,0,5,67,1,0,0,0,7,69,1,0,0,
        0,9,76,1,0,0,0,11,81,1,0,0,0,13,83,1,0,0,0,15,85,1,0,0,0,17,87,1,0,0,0,
        19,89,1,0,0,0,21,95,1,0,0,0,23,97,1,0,0,0,25,102,1,0,0,0,27,104,1,0,0,
        0,29,106,1,0,0,0,31,112,1,0,0,0,33,117,1,0,0,0,35,119,1,0,0,0,37,121,1,
        0,0,0,39,123,1,0,0,0,41,126,1,0,0,0,43,133,1,0,0,0,45,142,1,0,0,0,47,153,
        1,0,0,0,49,169,1,0,0,0,51,172,1,0,0,0,53,177,1,0,0,0,55,56,5,67,0,0,56,
        57,5,108,0,0,57,58,5,97,0,0,58,59,5,115,0,0,59,60,5,115,0,0,60,61,5,114,
        0,0,61,62,5,111,0,0,62,63,5,111,0,0,63,64,5,109,0,0,64,2,1,0,0,0,65,66,
        5,60,0,0,66,4,1,0,0,0,67,68,5,62,0,0,68,6,1,0,0,0,69,70,5,65,0,0,70,71,
        5,99,0,0,71,72,5,116,0,0,72,73,5,105,0,0,73,74,5,111,0,0,74,75,5,110,0,
        0,75,8,1,0,0,0,76,77,5,109,0,0,77,78,5,97,0,0,78,79,5,105,0,0,79,80,5,
        110,0,0,80,10,1,0,0,0,81,82,5,40,0,0,82,12,1,0,0,0,83,84,5,41,0,0,84,14,
        1,0,0,0,85,86,5,123,0,0,86,16,1,0,0,0,87,88,5,125,0,0,88,18,1,0,0,0,89,
        90,5,78,0,0,90,91,5,111,0,0,91,92,5,116,0,0,92,93,5,101,0,0,93,94,5,115,
        0,0,94,20,1,0,0,0,95,96,5,46,0,0,96,22,1,0,0,0,97,98,5,116,0,0,98,99,5,
        97,0,0,99,100,5,107,0,0,100,101,5,101,0,0,101,24,1,0,0,0,102,103,5,59,
        0,0,103,26,1,0,0,0,104,105,5,61,0,0,105,28,1,0,0,0,106,107,5,118,0,0,107,
        108,5,97,0,0,108,109,5,108,0,0,109,110,5,117,0,0,110,111,5,101,0,0,111,
        30,1,0,0,0,112,113,5,110,0,0,113,114,5,111,0,0,114,115,5,116,0,0,115,116,
        5,101,0,0,116,32,1,0,0,0,117,118,5,42,0,0,118,34,1,0,0,0,119,120,5,47,
        0,0,120,36,1,0,0,0,121,122,5,43,0,0,122,38,1,0,0,0,123,124,5,45,0,0,124,
        40,1,0,0,0,125,127,5,45,0,0,126,125,1,0,0,0,126,127,1,0,0,0,127,129,1,
        0,0,0,128,130,3,49,24,0,129,128,1,0,0,0,130,131,1,0,0,0,131,129,1,0,0,
        0,131,132,1,0,0,0,132,42,1,0,0,0,133,137,5,34,0,0,134,136,8,0,0,0,135,
        134,1,0,0,0,136,139,1,0,0,0,137,135,1,0,0,0,137,138,1,0,0,0,138,140,1,
        0,0,0,139,137,1,0,0,0,140,141,5,34,0,0,141,44,1,0,0,0,142,143,5,45,0,0,
        143,144,5,45,0,0,144,148,1,0,0,0,145,147,8,1,0,0,146,145,1,0,0,0,147,150,
        1,0,0,0,148,146,1,0,0,0,148,149,1,0,0,0,149,151,1,0,0,0,150,148,1,0,0,
        0,151,152,6,22,0,0,152,46,1,0,0,0,153,154,5,45,0,0,154,155,5,45,0,0,155,
        156,5,42,0,0,156,160,1,0,0,0,157,159,9,0,0,0,158,157,1,0,0,0,159,162,1,
        0,0,0,160,161,1,0,0,0,160,158,1,0,0,0,161,163,1,0,0,0,162,160,1,0,0,0,
        163,164,5,42,0,0,164,165,5,45,0,0,165,166,5,45,0,0,166,167,1,0,0,0,167,
        168,6,23,0,0,168,48,1,0,0,0,169,170,7,2,0,0,170,50,1,0,0,0,171,173,7,3,
        0,0,172,171,1,0,0,0,173,174,1,0,0,0,174,172,1,0,0,0,174,175,1,0,0,0,175,
        52,1,0,0,0,176,178,7,4,0,0,177,176,1,0,0,0,178,179,1,0,0,0,179,177,1,0,
        0,0,179,180,1,0,0,0,180,181,1,0,0,0,181,182,6,26,0,0,182,54,1,0,0,0,8,
        0,126,131,137,148,160,174,179,1,6,0,0
    };

        public static readonly ATN _ATN =
            new ATNDeserializer().Deserialize(_serializedATN);


    }
}
